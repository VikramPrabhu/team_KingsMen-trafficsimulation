;source code

breed[cars car]
breed[water]

globals
[
snow-counter
ecounter

  emergency-north-east

  emergency-north-west

  emergency-south-east

  emergency-south-west

  emergency-counter
  
  tempturtle
  templane
  new-counter
  glane0
  glane1
  glane2
  glane3
  glane4
  glane5
  glane6
  glane7
  intersections    ;;;;co-ordinates where all the lanes meet
  North-west       ;;;; patch at (-2,2)
  North-east       ;;;; patch at (2,2)
  South-west       ;;;; patch at (-2,-2)
  South-east       ;;;; patch at (2,-2)
  counter
]

patches-own
[
  plane0?
  plane1?
  plane2?
  plane3?
  plane4?
  plane5?
  plane6?
  plane7?
  intersection?
]





turtles-own
[

emergency-speed

  speed         ;;;; speed of each car
  max-speed     ;;;; maximum speed of the car
  min-speed     ;;;; minimum speed of the car
  lane          ;;;; randomly deciding on to which lane car has to be placed
  actual-lane   ;;;; depending upon the lane assigned, randomly assigning x-cor or y-cor
  change-lane   ;;;; new lane into which each car has to be changed
  front-car     ;;;; if there is any car in the front
  acceleration  ;;;; tells how much a car should accelerate
  deceleration  ;;;; tells how much a car should decelerate

  slane
]

water-own
[
 snow-speed
]

to create-snow
  
  ifelse ( snow )
  [

 create-water 100
 [
   set snow-speed 2
   set color white
   set shape "circle"
   set size 0.5
   set heading 180
   set xcor random min-pxcor
   set ycor random max-pycor
 ]

  create-water 100
 [
   set snow-speed 2
   set color white
   set shape "circle"
   set size 0.5
   set heading 180
   set xcor random min-pxcor
   set ycor random min-pycor
 ]
  create-water 100
 [
   set snow-speed 2
   set color white
   set shape "circle"
   set size 0.5
   set heading 180
   set xcor random max-pxcor
   set ycor random min-pycor
 ]
  create-water 100
 [
   set snow-speed 2
   set color white
   set shape "circle"
   set size 0.5
   set heading 180
   set xcor random max-pxcor
   set ycor random max-pycor
 ]
  for-snow
  ]
  [

    user-message ( word "Turn snow on ")


  ]
end


to for-snow

  if ( snow )
  [
      ask water
  [
    fd snow-speed
  ]

    if ( ticks = number-of-ticks )
    [
    ask water [ die ]
    stop
    ]
  ]
end



to setup

  clear-all
   ask patches
  [
    set intersection? false
    set plane0? false
    set plane1? false
    set plane2? false
    set plane3? false
    set plane4? false
    set plane5? false
    set plane6? false
    set plane7? false
  ]
  set new-counter 0
  ;set-default-shape  turtles "car"
  draw-margins
  set-intersections
 ; show-count-of-patches
  setup-cars
  set North-west "green"
  set counter 0
  change-green-light-NW
  reset-ticks
  ;show count  patches with glane0
end

to set-intersections
  set intersections patches with [ ( pxcor >= -2 and pxcor <= 2 and pycor = 2 ) or
                                   ( pxcor = -2  and pycor >= -2 and pycor <= 2 ) or
                                   ( pxcor = 2   and pycor >= -2 and pycor <= 2 ) or
                                   (pxcor >= -2  and pxcor <= 2 and pycor = -2 ) or
                                   (pxcor >= -2 and pxcor <= 2 and pycor = 1 ) or
                                    (pxcor >= -2 and pxcor <= 2 and pycor = 0 ) or
                                    (pxcor >= -2 and pxcor <= 2 and pycor = -1 )
  ]

  ask intersections [ set intersection? true ]
end
;;-------------------------------To draw margins in the world--------------------------------------------------------------------------------------;;
to draw-margins
  let x-cor max-pxcor mod 2
  let y-cor max-pycor mod 2

    ;---------to get white and red margins if the max-pxcor and max-pycor are even numbers--------------------------------------------------;;

    if ( max-pxcor mod 2 = 0) and (max-pycor mod 2 = 0 )
    [
      ask patches with [ (pxcor >= x-cor - 2)  and (pxcor <= x-cor + 2) ]
      [set pcolor white ]

    ;;;;To get the green grass effect alongside the roads
      ask patches with [ (pxcor < x-cor - 2 ) or ( pxcor > x-cor + 2 ) ]
      [set pcolor scale-color green ((random 1000) + 8000) 10 15000 ]


   ;;;;To get White margins along the Y-axis
      ask patches with [ (pycor >= y-cor - 2) and (pycor <= y-cor + 2) ]
      [set pcolor white ]


     ;;;;To get the effect of two lanes on a single road
      ask patches with [ (pxcor mod 2 = 0) and (pycor = 0) and (pxcor != 2) and (pxcor != -2) ]
       [ set pcolor black ]
      ask patches with [ (pycor mod 2 = 0) and (pxcor = 0) ]
        [set pcolor black ]

       ;;;;;;To delete the red patches and make them white at the intersection of the two roads
        ask patches with [ (pxcor >= -2 ) and (pxcor <= 2 ) and ( pycor = 0) or
                              (pycor >= -2 ) and (pycor <= 2) and (pxcor = 0) ]
         [set pcolor white ]
    ]


   ;;---------to get white margins and red margins and if max-pxcor and max-pycor are odd numbers--------------------------------------------;;
   if ( max-pxcor mod 2 = 1 ) and ( max-pycor mod 2 = 1 )
   [
       ask patches with [ (pxcor >= x-cor + -3)  and (pxcor <= x-cor + 1) ]
       [set pcolor white ]

    ;;;;To get the green grass effect alongside the roads
       ask patches with [ (pxcor < x-cor + -3 ) or ( pxcor >= x-cor + 2 ) ]
       [set pcolor scale-color green ((random 1000) + 8000) 10 15000 ]


   ;;;;To get White margins along the Y-axis
       ask patches with [ (pycor >= y-cor + -3) and (pycor <= y-cor + 1) ]
       [set pcolor white ]


     ;;;;To get the effect of two lanes on a single road
       ask patches with [ (pxcor mod 2 = 0) and (pycor = 0) and (pxcor != 2) and ( pxcor != -2)]
       [ set pcolor black ]
       ask patches with [ (pycor mod 2 = 0) and (pxcor = 0) ]
       [set pcolor black ]

       ;;;;;;To delete the red patches and make them white at the intersection of the two roads
        ask patches with [ (pxcor >= -2 ) and (pxcor <= 2 ) and ( pycor = 0) or
                             (pycor >= -2 ) and (pycor <= 2) and (pxcor = 0) ]
         [set pcolor white ]
    ]

;;------------------------------------------------------------------------------------------------------------------------------------------;;
 ;;------------------------------------To assign patches to their respective lanes----------------------------------------------------------------;;

 set glane0 patches with [ pxcor < -2 and pycor = 2]

 set glane1 patches with [ pxcor < -2 and pycor = -2]

 set glane2 patches with [ pxcor > 2 and pycor = 2]

 set glane3 patches with [ pxcor > 2 and pycor = -2]

 set glane4 patches with [ pxcor = 2 and pycor > 2]

 set glane5 patches with [ pxcor = -2 and pycor > 2]

 set glane6 patches with [ pxcor = 2 and pycor < -2]

 set glane7 patches with [ pxcor = -2 and pycor < -2]
 
 
 ask glane0 [ set plane0? true]

ask glane1 [ set plane1? true ]

ask glane2 [ set plane2? true ]

ask glane3 [ set plane3? true ]

ask glane4 [ set plane4? true ]

ask glane5 [ set plane5? true]

ask glane6 [ set plane6? true ]

ask glane7 [ set plane7? true]


ask patches with [ pxcor = 0 and pycor = 0 ] [ set pcolor black ]
end
;;-------------------------------------------------------------------------------------------------------------------------------------------------------------------------;;

;;-----------------------------------To initialize cars and set their parameters-------------------------------------------------------------------------------------------;;

to setup-cars
  create-turtles 30
  [
      set size 1
     set color blue
     set speed 0.2 + random-float 1.1
     set max-speed 1.2
     set min-speed 0.3
     set deceleration 0.05
     set acceleration 0.0035
      set lane (random 8)

      if ( lane = 0 )
       [
         set xcor random min-pxcor
         set ycor 2
       ]

      if ( lane = 1)
       [
         set xcor random min-pxcor
         set ycor -2
        ]

       if ( lane = 2 )
       [
         set xcor random max-pxcor
         set ycor 2
       ]

       if ( lane = 3 )
       [
         set xcor random max-pxcor
         set ycor -2
         set slane 3
        ]

       if ( lane = 4 )
       [
          set xcor 2
          set ycor random max-pycor
       ]

       if ( lane = 5 )
        [
          set xcor -2
          set ycor random max-pycor
        ]

        if ( lane = 6 )
        [
          set xcor 2
          set ycor random min-pycor
        ]

       if ( lane = 7 )
        [
          set xcor -2
          set ycor random min-pycor
        ]

        ;;---------------------------------if not on correct lanes-------------------------------------------------------------;;

          if ( lane = 0 ) or ( lane = 2 )
         [
           if ( ycor > 2 )
            [

              die
            ]
         ]

         if ( lane = 1 ) or ( lane = 3 )
         [
           if ( ycor < -2 )
            [

              die
            ]
         ]

         if ( lane = 4 ) or ( lane = 6 )
         [
           if ( xcor > 2 )
            [

              die
            ]
         ]

         if ( lane = 5 ) or ( lane = 7 )
          [
             if ( xcor < -2 )
              [

                die
              ]
          ]
  ;;-----------------setting headings to the cars --------------------------------------------------------------------------------------;;


       if ( lane = 0 ) or ( lane = 2 )
        [ set heading 90 ]

       if ( lane = 3)
       [ set heading 270 ]

       if (lane = 1)
       [ set heading 270 ]

       ;if ( lane = 3 ) or ( lane = 1 )
        ;[ set heading 270 ]

       if ( lane = 5 ) or ( lane = 7 )

        [ set heading 0 ]


       if ( lane = 6 ) or ( lane = 4 )
        [ set heading 180 ]


        separate-cars ;;to prevent more than one turtle on the same patch
        cars-only-in-lanes ;; cars should not be present beyond the traffic lights when the simulation starts
      ]
end

;;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------;;
;;------------------------------to separate turtles which are on same patch ------------------------------------------------------------------------------------------------;;


to separate-cars

      if any? other turtles-here
       [
         fd 1
         separate-cars
       ]
end

;;-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------;;

;;-------------------------------Procedure to prevent cars beyond traffic lights when simulation starts------------------------------------------------------------------------;;

to cars-only-in-lanes

if ( lane = 0 ) or ( lane = 1 )

[

if ( xcor >= -2 )

[

let temp-xcor random min-pxcor

ifelse ( temp-xcor < -2 )

[ set xcor temp-xcor ]

[ cars-only-in-lanes ]

]

]

if ( lane = 2 ) or ( lane = 3 )

[

if ( xcor <= 2 )

[

let temp-xcor random max-pxcor

ifelse ( temp-xcor > 2 )

[ set xcor temp-xcor ]

[ cars-only-in-lanes ]

]

]

if ( lane = 4 ) or ( lane = 5 )

[

if ( ycor <= 2 )

[

let temp-ycor random max-pycor

ifelse ( temp-ycor > 2 )

[ set ycor temp-ycor ]

[ cars-only-in-lanes ]

]

]

if ( lane = 6 ) or ( lane = 7 )

[

if ( ycor >= -2 )

[

let temp-ycor random min-pycor

ifelse ( temp-ycor < -2 )

[ set ycor temp-ycor ]

[ cars-only-in-lanes ]

]

]

end

;;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------;;

;;------------------------------ To let cars move along the lanes -----------------------------------------------------------------------------------------------------------;;

to go
periodic-change-of-lanes-in-vehicles
move
set counter counter + 1

if counter mod 25 = 0

[

change-globals-red

]

tick

end

;;-----------------------------------------------------------------------------------------------------------------------------------------------;;

to accelerate-the-car

set speed speed + acceleration

end

to decelerate-the-car

set speed [ speed ] of front-car - deceleration

end

;;--------------------------------procedure to make cars move-------------------------------------------------------------------------------------;;

to move

    if ( North-west = "green" )
    [

      ask turtles
      [
        if [intersection?] of patch-here or [plane5?] of patch-here
        [
          if ( lane = 7 )
          [
            let tempspeed speed
            set lane  5
            set speed 1.2
            forward-cars-as-per-speed
            ;set speed tempspeed
          ]
        ]

      ]
    ]

if ( North-west = "green" )

[ ask turtles

[

if ( lane = 0 or lane = 2 or lane = 5 or lane = 6 or lane = 1)

[

move-cars

]

        if ( lane = 4 or lane = 7 or lane = 3 )
        [
         
          separate-cars2
        ]

]

]

;;---------------------------------------------------------------------;;

    if (North-east = "green" )
    [
       ask turtles
      [
        if [intersection?] of patch-here or [plane2?] of patch-here
        [
          if ( lane = 0 )
          [
            let tempspeed speed
            set lane  2
            set speed 1.2
           forward-cars-as-per-speed
           ;set speed tempspeed
          ]
        ]
      ]
    ]


if ( North-east = "green" )

[

ask turtles

[

if ( lane = 4 or lane = 6 or lane = 2 or lane = 5 or lane = 1)

[

move-cars

]

       if ( lane = 0 or lane = 7 or lane = 3 )
       [
         separate-cars2
       ]


]

]

;;-------------------------------------------------------------------------;;

    if ( South-east = "green")
    [
       ask turtles
      [
        if [intersection?] of patch-here or [plane6?] of patch-here
        [
          if ( lane = 4 )
          [
            let tempspeed speed
            set lane  6
            set speed max-speed
            forward-cars-as-per-speed
            ;set speed tempspeed
          ]
        ]
      ]
    ]

if ( South-east = "green" )

[

ask turtles

[

if ( lane = 3 or lane = 1 or lane = 2 or lane = 5 or lane = 6)

[

move-cars

]
       if ( lane = 0 or lane = 4 or lane = 7 )
       [
         separate-cars2
       ]


]

]

;;--------------------------------------------------------------------------;;

     if ( South-west = "green")
     [

      ask turtles
      [
        if [intersection?] of patch-here or [plane1?] of patch-here
        [
          if ( lane = 3 )
          [
            let tempspeed speed
            set lane  1
            set speed max-speed
            forward-cars-as-per-speed
            ;set speed tempspeed
          ]
        ]
      ]
     ]

if ( South-west = "green" )

[

ask turtles

[

if ( lane = 7 or lane = 5 or lane = 2 or lane = 6 or lane = 1)

[

move-cars

]

       if ( lane = 0 or lane = 3 or lane = 4 )
       [
         separate-cars2
       ]


]

]


end

;;-------------------------------------------moving of cars------------------------------------------------------------------------------------------------;;

to move-cars

  if ( lane = 2 )
  [
    if ([plane0?] of patch-here )
    [
      set lane 0
    ]
  ]
  if ( lane = 0 )
  [
    if ([plane2?] of patch-here )
    [
      set lane 2
    ]
  ]

  if ( lane = 4 )
  [
    if ( [plane6?] of patch-here )
    [
      set lane 6
    ]
  ]
  if ( lane = 6 )
  [
    if ([plane4?] of patch-here)
    [
      set lane 4
    ]
  ]

  if ( lane = 7 )
  [
    if ([plane5?] of patch-here)
    [
      set lane 5
    ]
  ]
  if ( lane = 5 )
  [
    if ([plane7?] of patch-here)
    [
      set lane 7
    ]
  ]

  if ( lane = 3 )
  [
    if ([plane1?] of patch-here)
    [
      set lane 1
    ]
  ]
  if ( lane = 1 )
  [
    if ( [plane3?] of patch-here)
    [
      set lane 3
    ]
  ]

 

    forward-cars-as-per-speed
  end

to forward-cars-as-per-speed

           set front-car one-of turtles-on patch-ahead 1
           ifelse ( front-car = nobody )
           [ accelerate-the-car ]
           [ decelerate-the-car ]


          if  ( speed < min-speed ) [ set speed min-speed + 1 ]
          if  ( speed > max-speed ) [ set speed max-speed  ]

         fd speed
         changing-lanes
         ;separate-cars
end

;;-----------------------------------------------------------------------------------------------------;;

to change-green-light-NW

      if ( North-west = "green" )
       [
         ask patch -3 2   [ set pcolor green ]
         ask patch  2 3   [ set pcolor red ]
         ask patch  3 -2  [ set pcolor red ]
         ask patch -2 -3  [set pcolor red ]
       ]

end

to change-green-light-NE

       if ( North-east = "green" )
       [
         ask patch -2 2   [ set pcolor white ]
         ask patch  3 2   [ set pcolor white ]
         ask patch 2 3    [ set pcolor green ]
         ask patch  2 -3  [ set pcolor white ]
         ask patch -2 -3  [set pcolor red ]
         ask patch -3 -2   [ set pcolor white ]
         ask patch 3 -2    [ set pcolor red ]
         ask patch -3 2    [set pcolor red ]
       ]

end

to change-green-light-SE
       if ( South-east = "green" )
       [
         ask patch -3 2   [ set pcolor red ]
         ask patch -3 -2   [ set pcolor white ]
         ask patch 3 2    [ set pcolor white ]
         ask patch  2 3   [ set pcolor red ]
         ask patch  3 -2  [ set pcolor green ]
         ask patch -2 -3  [ set pcolor red ]
         ask patch 2 -3   [ set pcolor white ]

       ]

end

to change-green-light-SW
       if ( South-west = "green" )
       [
         ask patch -3 2   [ set pcolor red ]
         ask patch  2 3   [ set pcolor red ]
         ;ask patch  2 -2  [ set pcolor red ]
         ask patch -2 -3  [set pcolor  green ]
         ask patch 3 2    [ set pcolor white ]
         ask patch -3 2   [ set pcolor red ]
         ask patch 3 -2   [ set pcolor red ]
       ]

end


to changing-lanes

  if ( lane = 0 )
  [
    let turtle-ahead turtles-on patch-here
    if (change-lane = 1 )
    [
        if ( pxcor = 2 and pycor = 2 )
        [
          
          set heading 180
          set lane 6
          assign-correct-coordinates
        ]
    ]
    if ( change-lane = 2 )
    [
      if ( pxcor = -2 and pycor = 2 )
      [
        set heading 0
        set lane 5
        assign-correct-coordinates
      ]
    ]
   ]
  ;;----------------------------------------------------------------------------;;
  if ( lane = 3 )
  [
     let turtle-ahead turtles-on patch-here
    if ( change-lane = 1 )
    [
     if ( pxcor = 2 and pycor = -2 )
      [
        set heading 180
        set lane 6
        assign-correct-coordinates
      ]
    ]
      if ( change-lane = 2 )
      [
       if ( pxcor = -2 and pycor = -2 )
        [
          set heading 0
          set lane 5
          assign-correct-coordinates
        ]
      ]
    ]
  ;;----------------------------------------------------------------------------;;

     if ( lane = 4 )
  [
     let turtle-ahead turtles-on patch-here
    if ( change-lane = 1 )
    [
     if ( pxcor = 2 and pycor = -2 )
      [
        set heading -90
        set lane 1
        assign-correct-coordinates
      ]
    ]
      if ( change-lane = 2 )
      [
        if ( pxcor = 2 and pycor = 2 )
        [
          set heading 90
          set lane 2
          assign-correct-coordinates
        ]
      ]
    ]

;;----------------------------------------------------------------------------;;
   if ( lane = 7 )
  [
    if ( change-lane = 1 )
    [
     if ( pxcor = -2 and pycor = -2 )
      [
        set heading -90
        set lane 1
        assign-correct-coordinates
      ]
    ]
      if ( change-lane = 2 )
      [
        if ( pxcor = -2 and pycor = 2 )
        [
          set heading 90
          set lane 2
          assign-correct-coordinates
        ]
      ]
    ]
end

to assign-correct-coordinates

  if ( lane = 1)
  [
    if ( ycor < -2 or (ycor < 0 and ycor > -2 ) )
    [
      set ycor -2
    ]
  ]

   if (lane = 2)
   [
          if ( ycor > 2 or ( ycor > 0 and ycor < 2 ))
          [
            set ycor 2
          ]
   ]

  if (lane = 6)
  [
        if ( xcor > 2 or (xcor > 0 and xcor < 2))
        [
          set xcor 2
        ]
  ]

  if (lane = 5)
  [
        if ( xcor < -2  or ( xcor < 0 and xcor > -2))
        [
          set xcor -2
        ]
  ]
end


to separate-cars2

  if ( lane = 0)
  [
    if ( xcor >= min-pxcor and ycor > 0 or ycor <= 2 )
    [

      separate-cars
      stop-at-the-red-light
    ]
  ]

  if ( lane = 4 )
  [
    if ( ycor <= max-pycor and xcor > 0 and xcor <= 2 )
    [
      separate-cars
      stop-at-the-red-light
    ]
  ]

  if ( lane = 3 )
  [
    if ( xcor <= max-pxcor and ycor >= -2 and ycor < 0)
    [
      separate-cars
      stop-at-the-red-light
    ]
  ]

  if ( lane = 7 )
  [
    if( xcor < 0 and xcor >= -2 and ycor >= min-pycor)
    [
      separate-cars
      stop-at-the-red-light
    ]
  ]
end

to stop-at-the-red-light
  let t-ahead one-of turtles-on patch-ahead 1
  if ( t-ahead = nobody and [pcolor] of patch-ahead 1 != red )
  [
    fd 1
    slow-cars-at-the-red-light
    if ( (tempcounter mod 5) = 0 )
    [
      stop-at-the-red-light
    ]
  ]

end

to slow-cars-at-the-red-light
  set tempcounter tempcounter + 1
end

to periodic-change-of-lanes-in-vehicles
   if ( ( ticks mod 300) = 0 )
   [
     ask turtles
     [
       set change-lane random 3
     ]
   ]
end

to kill-the-cars-crossed-red-light

  if (North-west = "red")
  [
    if ( lane = 0 )
    [
     if ( xcor > -3 and ycor = 2 )
     [
       show ( word"The turtle " who "died at lane " lane )
       die
     ]
    ]
  ]

  if ( North-east = "red" )
  [
    if ( lane = 4 )
    [
     if ( xcor = 2 and ycor < 3 )
     [
       show ( word"The turtle " who "died at lane " lane )
       die
     ]
    ]
  ]

  if ( South-east = "red" )
  [
    if ( lane = 3 )
    [
     if ( xcor < 3 and ycor = -2 )
     ;if ([intersection?] of turtles-on patch-here )
     [
       show ( word"The turtle " who "died at lane " lane )
       die
     ]
    ]
  ]

  if ( South-west = "red")
  [
    if ( lane = 7 )
    [
     if ( xcor = -2 and ycor > -3 )
     [
       show ( word"The turtle " who "died at lane " lane )
       die
     ]
    ]
  ]
end

to Emergency-Vehicles

  if (emergency-counter = 0 )

 [

   set emergency-counter 1

   create-ambulances 1

   [

     set size 2

     set lane random 8

     set change-lane random 3

     set speed 1.5

     set color blue


     if ( lane = 1 ) [ set lane 0]

     if ( lane = 2 ) [ set lane 3 ]

     if ( lane = 5 ) [ set lane 4 ]

     if ( lane = 6 ) [ set lane 7 ]



     if ( lane = 0 )

       [

         setxy min-pxcor 1

         set heading 90

       ]


       if ( lane = 3 )

       [

         setxy max-pxcor -1

         set heading -90

        ]


       if ( lane = 4 )

       [

          setxy 1 max-pycor

          set heading 180

       ]


       if ( lane = 7 )

        [

          setxy -1 min-pycor

          set heading 0

        ]

   ]

 ]
 
end

to go-emergency

  Emergency-vehicles-changing-lanes




end













to Emergency-vehicles-changing-lanes




  if ( emergency-counter = 1 )

  [

    ask ambulances

    [

  if ( lane = 0 )

  [

   ;forward-the-emergency-vehicle

    if (change-lane = 1 )

    [

        if ( pxcor = 1 and pycor = 1 )

        [




          set heading 180

          set lane 6

          assign-correct-coordinates

          ;forward-the-emergency-vehicle

        ]

    ]

    if ( change-lane = 2 )

    [

      if ( pxcor = -1 and pycor = 1 )

      [

        set heading 0

        set lane 5

        assign-correct-coordinates

      ]

    ]

   ]

  ;;----------------------------------------------------------------------------;;

  if ( lane = 3 )

  [




    if ( change-lane = 1 )

    [

     if ( pxcor = 1 and pycor = -2 )

      [

        set heading 180

        set lane 6

        assign-correct-coordinates

      ]

    ]

      if ( change-lane = 2 )

      [

       if ( pxcor = -1 and pycor = -2 )

        [

          set heading 0

          set lane 5

          assign-correct-coordinates

        ]

      ]

    ]

  ;;----------------------------------------------------------------------------;;




     if ( lane = 4 )

  [




    if ( change-lane = 1 )

    [

     if ( pxcor = 1 and pycor = -2 )

      [

        set heading -90

        set lane 1

        assign-correct-coordinates

      ]

    ]

      if ( change-lane = 2 )

      [

        if ( pxcor = 1 and pycor = 1 )

        [

          set heading 90

          set lane 2

          assign-correct-coordinates

        ]

      ]

    ]




;;----------------------------------------------------------------------------;;

   if ( lane = 7 )

  [

    if ( change-lane = 1 )

    [

     if ( pxcor = -1 and pycor = -2 )

      [

        set heading -90

        set lane 1

        assign-correct-coordinates

      ]

    ]

      if ( change-lane = 2 )

      [

        if ( pxcor = -1 and pycor = 2 )

        [

          set heading 90

          set lane 2

          assign-correct-coordinates

        ]

      ]

    ]

    ]

  ]

end

to forward-the-emergency-vehicle


   ask ambulances
   [
     if ( ecounter = 1 )
     [
       if ( xcor = max-pxcor or xcor = min-pxcor or ycor = max-pycor or ycor = min-pycor )
       [
         resume-all-other-cars-after-emergency-vehicle-left
         die

         stop
         sound:stop-music
       ]
     ]
      fd speed
      test-sound
   ]
 end


to  test-sound
  sound:play-sound "/Users/jay/Downloads/Ambulance.wav"
end

to stop-vehicles-in-the-lane-of-emergency-vehicle

   let elane [lane] of one-of ambulances


  ask cars with [ lane = elane ]

  [

    set emergency-speed speed

    set speed 0

  ]

end

to resume-all-other-cars-after-emergency-vehicle-left

  ;show (word"Entered resume vehicles method")

  set North-west emergency-north-west

  set North-east emergency-north-east

  set South-west emergency-south-west

  set South-east emergency-south-east


  if ( North-west = "green" )

  [

    ask patches with [ pxcor = -3 and pycor = 2] [ set pcolor green]

  ]


  if ( North-east = "green" )

  [

    ask patches with [ pxcor = 2 and pycor = 3]  [ set pcolor green]

  ]


  if ( South-east = "green" )

  [

    ask patches with [ pxcor = 3 and pycor = -2] [ set pcolor green]

  ]


  if ( South-west = "green" )

  [

    ask patches with [ pxcor = -2 and pycor = -3][ set pcolor green]

  ]

  ask cars

  [

   forward-cars-as-per-speed

  ]


end


to print-output

  output-print (word " Average speed - " mean [speed] of cars)

    output-print (word " Maximum speed - " max [ speed ] of cars)

      output-print ( word "Density of cars - " count cars with [ lane = 0 ])


      user-message ( word " Average speed - " mean [speed] of cars

    " Maximum speed - " max [ speed ] of cars

       word "Density of cars - " count cars with [ lane = 0 ])

end
